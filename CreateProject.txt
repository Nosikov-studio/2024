1) Создаем локальную папку проекта. Например, создаем папку проекта: 16-SQLAlchemy;
2) Откроем папку. В контекстном меню (Shift+F10) выбираем "Открыть окно команд"
3) Вводим команду: 
git init
4) Убеждаемся, что в нашей папке появилась папка .git
5) Заходим в аккаунт github
6) Создаем репозиторий r16-SQLAlchemy
7) Создали. Теперь следуем подсказке в подзаголовке "create a new repository on the command line"
8) Копируем первую команду подсказки (ctrl+c): 
echo "# r16-SQLAlchemy" >> README.md
9) Вставляем из буфера обмена в командную строку 
(Alt+пробел, в появившемся меню "изхменить" > "вставить")
наш текст команды:
echo "# r16-SQLAlchemy" >> README.md
(Выполняем команду enter)
10) Убеждаемся, что в нашей локальной папке проекта появился файл README.md с текстом: "# r16-SQLAlchemy"
11) Аналогично вводим команду:
git add README.md
12) Аналогично вводим команду:
git commit -m "first commit"
13) Аналогично вводим команду:
git branch -M main
14) Аналогично вводим команду:
git remote add origin https://github.com/Nosikov-studio/r16-SQLAlchemy.git
15) Аналогично вводим команду:
git push -u origin main
16) Убеждаемся, что в нашем удаленном репозитории на Github появился файл README.md
СВЯЗЬ С РЕПОЗИТОРИЕМ УСТАНОВЛЕНА!
***********************************************************************************
ВИРТУАЛЬНАЯ СРЕДА 
17) Открываем нашу папку с проектом (16-SQLAlchemy) в VS Code
18) Terminal > New Terminal
(powershell)
19) Вводим команту в терминале (VS Code):
py -3 -m venv venv
(второе venv - название нашей виртуальной среды)
20) Убеждаемся, что появилась в нашей папке проекта новая папка с именем venv

21) Активируем виртуальное окружение командой в том же терминале(VS Code):
venv/Scripts/activate
(если не получается, тогда сначала исполняем команду: Set-ExecutionPolicy unrestricted (политика выполнения скриптов в PowerShell))

22) Убеждаемся, что приветственная строка предваряется в скобках названием нашей среды, здесь:
(venv) ... 16-SQLAlchemy>
***********************************************************************************
23) Создаем в папке проекта файл .gitignore
24) В этот файл записываем строчку(название появившейся папки):
venv
***********************************************************************************
Закрепим наши изменения
25)Вводим команду в командной строке (мы в папке проекта):
git add .
(Либо в VS Code -> Sourse Control -> Changes -> + (Stage All Changes))
26)Вводим команду в командной строке (мы в папке проекта):
git commit -m "second commit"
(Либо в VS Code -> вводим в поле commit и жмем кнопку commit)
27)Вводим команду в командной строке (мы в папке проекта):
git push 
(Либо в VS Code жмем кнопку "Sync Changes")
***********************************************************************************
???????????????????????????????????????????????????????????????????????????????????
Как нам теперь проще активировать виртуальную среду(venv) при последующем входе в проект через VS Code?

--) 
Если я правильно понял, VS Code умеет сам создавать окружение. Для этого:
- открываем в VS Code папку с нашим проектом
- Ctrl + Shift + P
- вводим "Python: Create Environment"
- выбираем "venv"
- выбираем путь/версию питона либо указываем путь вручную
